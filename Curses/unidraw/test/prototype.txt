///////////////////////////////////////// Window:

Window* operator();

/* return/set the dimension of the Window (col, row) */
Vector2i get_dimension() const;
void set_dimension(Vector2i dim);

/* return/set the cursor position relative to up-left corner of the Window (col, row) */
Vector2i get_curs_pos() const;
void set_curs_pos(Vector2u coord),

/* return/set a Window's cell relative to up-left corner of the window (col, row) */
Cell get_cell(Vector2i coord) const;
void set_cell(Vector2i coord, Cell cell);
void set_cell(Vector2i coord, win_t, Color = Default, Attr = Normal);

/* return/set the Window's attribute when writing */
Attr get_attr() const; wattr_set
void set_attr(Attr); wattr_get

/* return/set the Window's color pair when writing */
ColorPair get_color() const;
void set_color(ColorPair);

/* set on/off a Window's attribute and/or Color can be or'd with | */
void set_on(chtype);
void set_off(chtype);

/* return the data of the Window in one wide string */
std::wstring to_wstring();

/* draw a border around the window */
void set_border(BorderType, ColorPair = default, Attr = Normal); //verifier pas de probl√®me avec assignation par default
void set_border(Cell left, Cell right, Cell up, Cell down, Cell upLeft, Cell upRight, Cell downLeft, Cell downRight);

/* fill the windows whith a specific Cell, ColorPair and/or Attribute */
void fill(Cell);
void fill(ColorPair, Attr = Normal); 

/* copy the content of another Window */
void copy(Window&, IntRect, Vector2i, bool convert_attr = true) copywin;

void write(col, row, text);

/* clear the Window */
void clear() werase;

/* prepare the Window to be drawn at the next Term::update */
virtual void display() pnoutrefresh;

///////////////////////////////////////// Term:


static void init_curs();
static void end_curs();

static void save_state();
static void load_state();

activate_cooked_mode(bool) cbreak();
activate_echo_key(bool) echo();
activate_special_key(bool) keypad();
activate_scroll(bool) scrollok();

set_timeout();
get_timeout();

set_curs_vis(int vis);
get_curs_vis();

int pop_input(); getch()
void push_input(); ungetch()

getline(); getstr()

update() doupdate;
